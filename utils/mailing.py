import asyncio
from aiogram import Bot
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import FSInputFile, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from pathlib import Path

from database import requests as rq
from text import all_quests
from config_reader import config
from utils import scheduler_func


global bot
bot = Bot(token=config.bot_token.get_secret_value(),
          default=DefaultBotProperties(
          parse_mode=ParseMode.HTML
          ))


async def mail_sertain_text(tg_id, text: str):
    '''
    :tg_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :text: —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.

    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    '''
    try:
        await bot.send_message(chat_id=tg_id, text=text)
        await asyncio.sleep(1)
    except Exception:
        await asyncio.sleep(1)


async def mail_sertain_photo(chat_id, path: str):
    '''
    :tg_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :path: –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ —Å —Ñ–æ—Ç–æ –±–µ–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞.

    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    '''
    BASE_DIR = Path(__file__).resolve().parent.parent
    source = f"{BASE_DIR}/{path}"
    # print(source)
    await bot.send_photo(chat_id=chat_id, photo=FSInputFile(path=source))


async def mail_file(id, file_path):
    '''
    :tg_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :file_path: –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ —Ñ–∏–≥ –∑–Ω–∞–µ—Ç –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    '''
    await bot.send_document(
        chat_id=id,
        document=FSInputFile(path=file_path)
    )


async def mail_and_text_photo_url(tg_id, quest, current_day):
    '''
    :tg_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    :quest: —Å–ª–æ–≤–∞—Ä—å —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –∫—É—Ä—Å–æ–º
    :current_day: —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å(=–Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è)

    –û—Ç—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π-—Å—Å—ã–ª–∫–æ–π
    '''
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(
        text="–ß–∏—Ç–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ",
        url=quest[current_day]["url"])
    )
    BASE_DIR = Path(__file__).resolve().parent.parent
    await bot.send_photo(
        chat_id=tg_id,
        photo=FSInputFile(
            path=f"{BASE_DIR}/utils/tmp/{quest[current_day]["photo"]}"),
        caption=quest[current_day]["text"],
        reply_markup=keyboard.as_markup()
    )


async def mailing(tg_id):
    '''
    :tg_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–º—É –∑–∞–¥–∞–Ω–∏—è

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏—Å—Ö–æ–¥—è –∏–∑ –¥–Ω—è –Ω–∞ –∫—É—Ä—Å–µ.
    '''
    current_day = await rq.what_day_user(tg_id)
    quest = all_quests[f"quest_{await rq.info_user_in_course(tg_id)}"]
    #print(quest)
    has_photo = True if quest[current_day]["photo"] != 0 else False
    has_url = True if quest[current_day]["url"] != 0 else False

    if has_photo and has_url:
        await mail_and_text_photo_url(tg_id=tg_id, quest=quest, current_day=current_day)
    if not (has_photo and has_url):
        await mail_sertain_text(tg_id=tg_id, text="–ï—Å–ª–∏ —É–≤–∏–¥–µ–ª–∏ —ç—Ç–æ, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É")
    await rq.set_already_received(tg_id)
    
    await rq.add_day(tg_id)
    really_end = await rq.it_user_end(tg_id)
    if really_end:
        if quest == all_quests["quest_0"]:
            await end_mailing_probn(tg_id)
        else:
            await end_mailing(tg_id)
        await scheduler_func.remove_schedule_task(tg_id)
        await rq.remove_user_schedule(tg_id)


async def end_mailing_probn(tg_id):
    '''
    –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–ø–æ–≤–µ—â–µ–Ω–∏—è, —á—Ç–æ –ø—Ä–æ–±–Ω—ã–π –∫—É—Ä—Å –∑–∞–≤–µ—Ä—à—ë–Ω.
    '''
    await mail_sertain_text(tg_id=tg_id, text="–≠—Ç–æ –±—ã–ª–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ –ø—Ä–æ–±–Ω–æ–≥–æ –∫—É—Ä—Å–∞ üéâ\n\n\
–ï—Å–ª–∏ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å ‚Äî –≤—ã–±–∏—Ä–∞–π –æ–¥–∏–Ω –∏–∑ –¥—Ä—É–≥–∏—Ö –∫—É—Ä—Å–æ–≤ –≤ –±–æ—Ç–µ. –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç—å –≤–º–µ—Å—Ç–µ –∏ –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ —Ä–∞—Å—Ç–∏ –¥–∞–ª—å—à–µ üí°")

async def end_mailing(tg_id):
    '''
    –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–ø–æ–≤–µ—â–µ–Ω–∏—è, —á—Ç–æ –µ–≥–æ –∫—É—Ä—Å –∑–∞–≤–µ—Ä—à—ë–Ω (–ö—Ä–æ–º–µ –ø—Ä–æ–±–Ω–æ–≥–æ).
    '''
    await mail_sertain_text(tg_id=tg_id, text="–≠—Ç–æ –±—ã–ª–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ üéâ\n\n\
–ï—Å–ª–∏ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å ‚Äî –≤—ã–±–∏—Ä–∞–π –æ–¥–∏–Ω –∏–∑ –¥—Ä—É–≥–∏—Ö –∫—É—Ä—Å–æ–≤ –≤ –±–æ—Ç–µ. –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç—å –≤–º–µ—Å—Ç–µ –∏ –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ —Ä–∞—Å—Ç–∏ –¥–∞–ª—å—à–µ üí°")

